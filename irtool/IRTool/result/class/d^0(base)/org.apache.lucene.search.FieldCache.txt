org.apache.lucene.search.FieldCache{
public static final ByteParser DEFAULT_BYTE_PARSER = new ByteParser() {

    public byte parseByte(String value) {
        return Byte.parseByte(value);
    }

    protected Object readResolve() {
        return DEFAULT_BYTE_PARSER;
    }

    public String toString() {
        return FieldCache.class.getName() + ".DEFAULT_BYTE_PARSER";
    }
};
public static final ShortParser DEFAULT_SHORT_PARSER = new ShortParser() {

    public short parseShort(String value) {
        return Short.parseShort(value);
    }

    protected Object readResolve() {
        return DEFAULT_SHORT_PARSER;
    }

    public String toString() {
        return FieldCache.class.getName() + ".DEFAULT_SHORT_PARSER";
    }
};
public static final IntParser DEFAULT_INT_PARSER = new IntParser() {

    public int parseInt(String value) {
        return Integer.parseInt(value);
    }

    protected Object readResolve() {
        return DEFAULT_INT_PARSER;
    }

    public String toString() {
        return FieldCache.class.getName() + ".DEFAULT_INT_PARSER";
    }
};
public static final FloatParser DEFAULT_FLOAT_PARSER = new FloatParser() {

    public float parseFloat(String value) {
        return Float.parseFloat(value);
    }

    protected Object readResolve() {
        return DEFAULT_FLOAT_PARSER;
    }

    public String toString() {
        return FieldCache.class.getName() + ".DEFAULT_FLOAT_PARSER";
    }
};
public static final LongParser DEFAULT_LONG_PARSER = new LongParser() {

    public long parseLong(String value) {
        return Long.parseLong(value);
    }

    protected Object readResolve() {
        return DEFAULT_LONG_PARSER;
    }

    public String toString() {
        return FieldCache.class.getName() + ".DEFAULT_LONG_PARSER";
    }
};
public static final DoubleParser DEFAULT_DOUBLE_PARSER = new DoubleParser() {

    public double parseDouble(String value) {
        return Double.parseDouble(value);
    }

    protected Object readResolve() {
        return DEFAULT_DOUBLE_PARSER;
    }

    public String toString() {
        return FieldCache.class.getName() + ".DEFAULT_DOUBLE_PARSER";
    }
};
public static final IntParser NUMERIC_UTILS_INT_PARSER = new IntParser() {

    public int parseInt(String val) {
        final int shift = val.charAt(0) - NumericUtils.SHIFT_START_INT;
        if (shift > 0 && shift <= 31)
            throw new FieldCacheImpl.StopFillCacheException();
        return NumericUtils.prefixCodedToInt(val);
    }

    protected Object readResolve() {
        return NUMERIC_UTILS_INT_PARSER;
    }

    public String toString() {
        return FieldCache.class.getName() + ".NUMERIC_UTILS_INT_PARSER";
    }
};
public static final FloatParser NUMERIC_UTILS_FLOAT_PARSER = new FloatParser() {

    public float parseFloat(String val) {
        final int shift = val.charAt(0) - NumericUtils.SHIFT_START_INT;
        if (shift > 0 && shift <= 31)
            throw new FieldCacheImpl.StopFillCacheException();
        return NumericUtils.sortableIntToFloat(NumericUtils.prefixCodedToInt(val));
    }

    protected Object readResolve() {
        return NUMERIC_UTILS_FLOAT_PARSER;
    }

    public String toString() {
        return FieldCache.class.getName() + ".NUMERIC_UTILS_FLOAT_PARSER";
    }
};
public static final LongParser NUMERIC_UTILS_LONG_PARSER = new LongParser() {

    public long parseLong(String val) {
        final int shift = val.charAt(0) - NumericUtils.SHIFT_START_LONG;
        if (shift > 0 && shift <= 63)
            throw new FieldCacheImpl.StopFillCacheException();
        return NumericUtils.prefixCodedToLong(val);
    }

    protected Object readResolve() {
        return NUMERIC_UTILS_LONG_PARSER;
    }

    public String toString() {
        return FieldCache.class.getName() + ".NUMERIC_UTILS_LONG_PARSER";
    }
};
public static final DoubleParser NUMERIC_UTILS_DOUBLE_PARSER = new DoubleParser() {

    public double parseDouble(String val) {
        final int shift = val.charAt(0) - NumericUtils.SHIFT_START_LONG;
        if (shift > 0 && shift <= 63)
            throw new FieldCacheImpl.StopFillCacheException();
        return NumericUtils.sortableLongToDouble(NumericUtils.prefixCodedToLong(val));
    }

    protected Object readResolve() {
        return NUMERIC_UTILS_DOUBLE_PARSER;
    }

    public String toString() {
        return FieldCache.class.getName() + ".NUMERIC_UTILS_DOUBLE_PARSER";
    }
};
getAuto(IndexReader, String){
}
getCustom(IndexReader, String, SortComparator){
}
}
